plugins {
  id 'java'
  id 'war'        // WAR로 배포할 거면 유지
}

group = 'com.prisma77'
version = '1.0.0'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

repositories {
  mavenCentral()
}

ext {
  springVersion = '5.3.39'
  lombokVersion = '1.18.32'
  junitVersion  = '5.10.2'
}

/** 선택: Spring이 끌고오는 commons-logging을 SLF4J로 브릿지 */
configurations.all {
  exclude group: 'commons-logging', module: 'commons-logging'
}

dependencies {
  // === Spring ===
  implementation "org.springframework:spring-context:${springVersion}"
  implementation "org.springframework:spring-webmvc:${springVersion}"
  implementation 'javax.inject:javax.inject:1'

  // === AOP ===
  implementation 'org.aspectj:aspectjrt:1.9.20'
  implementation 'org.aspectj:aspectjweaver:1.9.20'

  // === Servlet/JSP/JSTL (Tomcat 9 -> javax.*) ===
  compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
  compileOnly 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3'
  implementation 'javax.servlet:jstl:1.2'

  // === Logging ===
  implementation 'org.apache.logging.log4j:log4j-api:2.18.0'
  implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
  implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.18.0'
  implementation 'org.slf4j:jcl-over-slf4j:1.7.36'   // JCL -> SLF4J

  // === XML ===
  implementation 'xerces:xercesImpl:2.12.2'

  // === JSON ===
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'

  // === Lombok ===
  compileOnly "org.projectlombok:lombok:${lombokVersion}"
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
  testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
  testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  // === Test ===
  testImplementation "org.springframework:spring-test:${springVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
  useJUnitPlatform()
}
